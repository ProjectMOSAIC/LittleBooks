
\section{Numerical summaries}

\R\ includes a number of commands to numerically summarize variables.
These include the capability of calculating the mean, standard deviation,
variance, median, five number summary, interquartile range (IQR) as well as arbitrary quantiles.  We will
illustrate these using the CESD (Center for Epidemiologic Studies--Depression)
measure of depressive symptoms (which takes on values between 0 and 60, with higher
scores indicating more depressive symptoms).  

To improve the legibility of output,
we will also set the default number of digits to display to a more reasonable
level (see \function{?options} for more configuration possibilities).

\myindex{HELPrct dataset}%
\Rindex{options()}%
\Rindex{require()}%
\Rindex{mosaic package}%
<<cesd1,cache=FALSE>>=
require(mosaic)
require(mosaicData)
options(digits=4)
mean(~ cesd, data=HELPrct)
@

\myindex{Start Teaching with R@\emph{Start Teaching with R}}%
\myindex{Teaching with R@\emph{Teaching with R}}%
\myindex{Start Modeling with R@\emph{Start Modeling with R}}%
\myindex{Modeling with R@\emph{Modeling with R}}%
Note that the \function{mean()} function in the \pkg{mosaic} package supports a formula interface common to \pkg{lattice} graphics and linear models (e.g., \function{lm()}).  The \pkg{mosaic} package provides many other functions that use the same notation, which we will be using throughout this document.  
\DiggingDeeper[-3cm]{If you have not seen the formula notation before, the companion book, \emph{Start Teaching with R} provides a detailed presentation.  \emph{Start Modeling with R}, another companion book, details the relationship between the process of modeling and the formula notation. }

\Rindex{with()}%
\Rindex{mean()}%
The same output could be created using the following commands (though we will use the MOSAIC versions when available).
<<>>=
with(HELPrct, mean(cesd))
mean(HELPrct$cesd)
@
\Rindex{sd()}%
\Rindex{var()}%
Similar functionality exists for other summary statistics.
<<cesd2,cache=FALSE>>=
sd(~ cesd, data=HELPrct)
@
<<cesd2b,cache=FALSE>>=
sd(~ cesd, data=HELPrct)^2
var(~ cesd, data=HELPrct)
@

It is also straightforward to calculate quantiles of the distribution.

\myindex{quantiles}%
\Rindex{median()}%
<<cesd3>>=
median(~ cesd, data=HELPrct)
@

By default, the \function{quantile()} function displays the quartiles, but can be given a vector of quantiles to display.  
\Rindex{quantile()}%
\Caution{Not all commands have been upgraded to
support the formula interface. For these functions, variables within dataframes must be accessed using \function{with()} or the \$ operator.}
<<cesd4>>=
with(HELPrct, quantile(cesd))
with(HELPrct, quantile(cesd, c(.025, .975)))
@

\hfill

\Rindex{favstats()}%
Finally, the \function{favstats()} function in the \pkg{mosaic} package provides a concise summary of  many useful statistics.
<<>>=
favstats(~ cesd, data=HELPrct)
@

\section{Graphical summaries}
The \function{histogram()} function is used to create a histogram. Here we use the formula interface (as discussed in the \emph{Start Modeling with R} book) to specify that we want a histogram of the CESD scores.

\Rindex{histogram()}%
\vspace{-4mm}
\begin{center}
<<cesd-hist>>=
gf_histogram(~ cesd, data = HELPrct, binwidth = 2.4) %>%
  gf_labs(title = "") 
@
\end{center}

We can use the \function{width} and \function{center} options to control the location of the bins.

\begin{center}
<<cesd-hist2>>=
histogram(~ cesd, width=5, center=2.5, data=HELPrct)
@
\end{center}


\Rindex{tally()}%
\Rindex{format option}%
In the \variable{HELPrct} dataset, approximately one quarter of the subjects are female.  
<<>>=
tally(~ sex, data=HELPrct)
tally(~ sex, format="percent", data=HELPrct)
@

It is straightforward to restrict our attention to just the female subjects.
If we are going to do many things with a subset of our data, it may be easiest
to make a new dataframe containing only the cases we are interested in.
The \function{filter()} function in the \pkg{dplyr} package can be used to generate a new dataframe containing
just the women or just the men  (see also section \ref{sec:subsets}).  Once this is created, the
the \function{stem()} function is used to create a stem and leaf plot.
\Caution{Note that the tests for equality use \emph{two} equal signs}
\Rindex{stem()}%
\Rindex{filter()}%
\Rindex{dplyr package}%
<<cesd-stem>>=
female <- filter(HELPrct, sex=='female')
male <- filter(HELPrct, sex=='male')
with(female, stem(cesd))
@

\Rindex{dplyr package}%
\Rindex{tidyr package}%

Subsets can also be generated and used ``on the fly" (this time including
an overlaid normal density):
\Rindex{fit option}%
<<women-cesd-hist,tidy=FALSE,message=FALSE>>=
histogram(~ cesd, fit="normal",
  data=filter(HELPrct, sex=='female'))  
@

Alternatively, we can make side-by-side plots to compare multiple subsets.
<<cesd-male-female>>=
histogram(~ cesd | sex, data=HELPrct)
@

The layout can be rearranged.
\Rindex{layout option}%
\begin{center}
<<cesd-dotlayout>>=
histogram(~ cesd | sex, layout=c(1, 2), data=HELPrct)   
@
\end{center}
\begin{problem}
Using the \dataframe{HELPrct} dataset, 
create side-by-side histograms of the CESD scores by substance abuse
group, just for the male subjects, with an overlaid normal density.
\end{problem}%
\begin{solution}
<<subsmale, tidy=FALSE>>=
histogram(~ cesd | substance, fit="normal", 
  data=filter(HELPrct, sex=='male'))
@
\end{solution}%
We can control the number of bins in a number of ways.  These can be specified 
as the total number.
\Rindex{nint option}%
\begin{center}
<<cesd-dot,fig.height=1.8>>=
histogram(~ cesd, nint=20, data=female)   
@
\end{center}
The width of the bins can be specified.
\Rindex{width option}%
\begin{center}
<<cesd-dotwidth,fig.height=1.8>>=
histogram(~ cesd, width=2, data=female)   
@
\end{center}

The \function{dotPlot()} function is used to create a dotplot
for a smaller subset of subjects (homeless females).  We also demonstrate
how to change the x-axis label.
\Rindex{dotPlot()}%
<<cesd-dot4,tidy=FALSE>>=
dotPlot(~ cesd, xlab="CESD score", 
  data=filter(HELPrct, (sex=="female") & (homeless=="homeless")))
@


\section{Density curves}

\FoodForThought{Density plots are also sensitive to certain choices.  If your density plot is too jagged or too smooth, try changing the \option{adjust} argument: larger than 1 for smoother plots, less than 1 for more jagged plots.} One disadvantage of histograms is that they can be sensitive to the choice of the number of bins.  Another display to consider is a density curve.

Here we adorn a density plot with some additions to demonstrate how to build up a graphic for pedagogical purposes. We add some text, a superimposed normal density as well as a vertical line. A variety of line types and colors can be specified, as well as line widths.

\DiggingDeeper{The \function{plotFun()} function can also be used to annotate plots (see section \ref{sec:plotFun}).}
\begin{center}
\Rindex{densityplot()}%
\Rindex{ladd()}%
\Rindex{panel.mathdensity()}%
\Rindex{panel.abline()}%
\Rindex{col option}%
\Rindex{grid.text()}%
\Rindex{lty option}%
\Rindex{lwd option}%
<<dens1,tidy=FALSE,fig.keep="last">>=
densityplot(~ cesd, data=female)
ladd(grid.text(x=0.2, y=0.8, 'only females'))
ladd(panel.mathdensity(args=list(mean=mean(cesd), 
  sd=sd(cesd)), col="red"), data=female)
ladd(panel.abline(v=60, lty=2, lwd=2, col="grey"))
@
\end{center}

\section{Frequency polygons}
\myindex{polygons}%

A third option is a frequency polygon, where  the graph is created by joining the midpoints of the top of the bars of a histogram.
\Rindex{freqpolygon()}%
\begin{center}
<<poly,tidy=FALSE,fig.keep="last",out.width="2.5in">>=
freqpolygon(~ cesd, data=female)
@
\end{center}

\section{Normal distributions}

\FoodForThought{\code{x} is for eXtra.}%
The most famous density curve is a normal distribution.  The \function{xpnorm()} function displays the probability that a random variable is less than the first argument, for a normal distribution with mean given by the second argument and standard deviation by the third. More information about probability distributions can be found in section \ref{sec:probability}.

<<norm1,fig.width=5,fig.height=2.4>>=
xpnorm(1.96, mean=0, sd=1)
@


\section{Inference for a single sample}
\label{sec:bootstrapsing}

\Rindex{t.test()}%
\Rindex{confint()}%

We can calculate a 95\% confidence interval for the mean CESD 
score for females by using a t-test:
<<tinterval>>=
t.test(~ cesd, data=female)
confint(t.test(~ cesd, data=female))
@

\DiggingDeeper{More details and examples can be found in the 
\pkg{mosaic} package Resampling Vignette.}
\myindex{bootstrapping}%
\myindex{resampling}%
But it's also straightforward to calculate this using a bootstrap.
The statistic that we want to resample is the mean.  
<<calculuatemean>>=
mean(~ cesd, data=female)
@

One resampling trial can be carried out:
\FoodForThought{Here we sample with replacement from the original dataframe,
creating a resampled dataframe with the same number of rows.}
\Rindex{resample()}%
<<resamplemean>>=
mean(~ cesd, data=resample(female))
@
\FoodForThought{Even though a single trial is of little use, it's smart having
students do the calculation to show that they are (usually!) getting a different
result than without resampling.}

Another will yield different results:
<<>>=
mean(~ cesd, data=resample(female))
@

Now conduct 1000 resampling trials, saving the results in an object
called \texttt{trials}:
\Rindex{do()}%
\Rindex{qdata()}%
<<bootint>>=
trials <- do(1000) * mean(~ cesd, data=resample(female))
head(trials, 3)
qdata(~ mean, c(.025, .975), data=trials)
@
